@page "/records"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using Microsoft.EntityFrameworkCore
@using MyBudget.Models
@using MyBudget.Data
@implements IAsyncDisposable
@inject IDbContextFactory<MyBudget.Data.MyBudgetContext> DbFactory

<PageTitle>Records</PageTitle>

<h1 class="pt-3">Records</h1>

<MudIconButton Variant="Variant.Filled" href="records/create" Color="Color.Success" Icon="@Icons.Material.Filled.Add" />
@if (records == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudDataGrid Items="@records" Dense="true" Hover="true" Bordered="true" Style="--mud-palette-surface: transparent" SortMode="SortMode.Single">
        <ToolBarContent>
            <MudSpacer />
            <MudIconButton Variant="Variant.Filled" href="records/create" Color="Color.Success" Icon="@Icons.Material.Filled.Add"></MudIconButton>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Title="Category" Property="records => records.Category.Name" />
            <PropertyColumn Property="records => records.Description" />
            <PropertyColumn Title="Amount" Property="x => x.Amount" Format="C" CellStyleFunc="@_cellStyleFunc" />
            <PropertyColumn Title="Account" Property="records => records.FromAccount.Name" />
            <TemplateColumn Title="Transaction Date" SortBy="@(records => records.Date)" Sortable="true">
                <CellTemplate>
                    <MudDatePicker Editable="false" Disabled @bind-Date="@context.Item.Date" />
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn>
                <CellTemplate>
                    <MudIconButton Href="@($"records/edit?id={context.Item.Id}")" Variant="Variant.Filled" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit"></MudIconButton>
                    <MudIconButton Href="@($"records/details?id={context.Item.Id}")" Variant="Variant.Filled" Color="Color.Primary" Icon="@Icons.Material.Filled.Pages"></MudIconButton>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Record" />
        </PagerContent>
    </MudDataGrid>
}
@code {
    private MyBudgetContext context = default!;
    private List<Record> records;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        records = await context.Record
        .Include(r => r.Category) // Inclui Category
        .Include(r => r.User)     // Inclui User, se existir
        .Include(r => r.FromAccount)
        .ToListAsync();
    }
    private Func<Record, string> _cellStyleFunc => x =>
    {
        string style = "";
        if (x.Type == "Income")
            style += "color:#8CED8C";
        else if (x.Type == "Expense")
            style += "color:#EB0030";
        return style;
    };

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
